% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/COVAILworkbook_initialize.R
\name{COVAILworkbook.initialize}
\alias{COVAILworkbook.initialize}
\title{Generate printable batch-specific worksheets}
\usage{
COVAILworkbook.initialize(
  covail.manifest.batched.xlsx = NULL,
  batch.name = NULL,
  workbook.dir = NULL,
  .overwrite = FALSE
)
}
\arguments{
\item{covail.manifest.batched.xlsx}{file.path (character string); .xlsx (Excel) workbook as saved from \link{manifest.batch.assign}. An expected MD5 hash is encoded in this function and will return an error/stop message if invalidated.}

\item{batch.name}{Character string of the form "COVAIL_###"; ### currently can have the string value of "001" through "041".}

\item{workbook.dir}{file.path (character string); batch-specific .xlsx (Excel) workbook will be written to the directory.}

\item{.overwrite}{logical; default \code{FALSE}. If \code{TRUE}, will overwrite an existing batch-specific workbook.}
}
\value{
a batch-specific .xlsx (Excel) workbook with three sheets:
\enumerate{
\item stage vials (sample vials); banded-row table
\item stage vials box map; embedded .png plot of a 9x9 box
\item Day 1: Thaw; banded-row table
}
}
\description{
Using the result of \link{manifest.batch.assign}, generate printable batch-specific worksheets: stage vials, a stage vials box map (9x9), and a 'Day 1: Thaw' sheet. This pre-organization step allows for confirmation of sample vial availability and correct metadata (unique identifier) and expedites assay workflow. Sheets are to be printed, signed, and hole-punched for storage in study-specific binder.
}
\examples{
#a batch-assigned manifest as prepared and saved by:
#COVAILworkflow::BLIS.manifest.prepare()
#COVAILworkflow::manifest.batch.assign()

COVAIL_manifest_batched.path<-list.files(
  system.file("extdata",package="COVAILworkflow"),
  pattern="COVAIL_manifest_batched", full.names = TRUE
)

invisible(
  file.remove(
    list.files(
      tempdir(),
      full.names = TRUE,
      pattern = "COVAIL_[0-9]{3}_workflow.xlsx")
  )
)

COVAILworkbook.initialize(
  covail.manifest.batched.xlsx = COVAIL_manifest_batched.path,
  batch.name = "COVAIL_001",
  workbook.dir = tempdir()
)

list.files(tempdir(),pattern = "COVAIL_[0-9]{3}_workflow.xlsx")
# shell.exec(list.files(tempdir(),pattern = "COVAIL_[0-9]{3}_workflow.xlsx",full.names = TRUE))
}
