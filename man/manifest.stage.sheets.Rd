% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manifest_stage_sheets.R
\name{manifest.stage.sheets}
\alias{manifest.stage.sheets}
\title{Generate printable batch-specific worksheets}
\usage{
manifest.stage.sheets(manifest.collapsed, workbook.dir, .overwrite = FALSE)
}
\arguments{
\item{manifest.collapsed}{as returned from \link{manifest.batch.assign}:
\itemize{
\item list element (if in environment)
\item sheet name (if saved as .xlsx).
}}

\item{workbook.dir}{file.path (character string); excel (.xlsx) workbook(s) will be written to the directory.}

\item{.overwrite}{logical; default \code{FALSE}. If \code{TRUE}, will overwrite an existing batch-specific workbook.}
}
\value{
.xlsx (Excel) workbook with three sheets:
\enumerate{
\item pull/stage list of sample vials; banded-row table
\item pull/stage box map; embedded .png plot of a 9x9 box
\item Day 1: Thaw; banded-row table
}
}
\description{
Using the result of \link{manifest.batch.assign}, generate printable batch-specific worksheets: a stage list (vials), a stage list box map (9x9), and a 'Day 1: Thaw' sheet. This pre-organization step allows for confirmation of sample vial availability and correct metadata (unique identifier) and expedites assay workflow. Sheets are to be printed, signed, and hole-punched for storage in study-specific binder.
}
\examples{
#a batch-assigned manifest as prepared by:
#COVAILworkflow::BLIS.manifest.prepare()
#COVAILworkflow::manifest.batch.assign()

COVAIL_manifest_batched.path<-list.files(
  system.file("extdata",package="COVAILworkflow"),
  pattern="COVAIL_manifest_batched", full.names = TRUE
)

COVAIL_manifest_batched<-data.table::setDT(
  openxlsx::read.xlsx(
    COVAIL_manifest_batched.path,sheet="manifest_collapsed"
  )
)

invisible(
  file.remove(
    list.files(tempdir(),full.names = TRUE,pattern = "COVAIL_[0-9]{3}.xlsx")
  )
)

manifest.stage.sheets(
  COVAIL_manifest_batched[stage.name=="COVAIL_001"],
  workbook.dir = tempdir()
)

list.files(tempdir(),pattern = "COVAIL_[0-9]{3}.xlsx")
shell.exec(list.files(tempdir(),pattern = "COVAIL_[0-9]{3}.xlsx",full.names = TRUE))
}
